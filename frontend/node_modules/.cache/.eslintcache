[{"/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/index.js":"1","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/App.js":"2","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/reportWebVitals.js":"3","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/services/UserService.js":"4","/Users/michaelmatta/Desktop/PantryPal/frontend/src/index.js":"5","/Users/michaelmatta/Desktop/PantryPal/frontend/src/App.js":"6","/Users/michaelmatta/Desktop/PantryPal/frontend/src/reportWebVitals.js":"7","/Users/michaelmatta/Desktop/PantryPal/frontend/src/services/UserService.js":"8","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/services/FoodService.js":"9","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/components/FoodList.js":"10","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/components/FoodEdit.js":"11"},{"size":546,"mtime":1650154868273,"results":"12","hashOfConfig":"13"},{"size":918,"mtime":1650464993481,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1650149443622,"results":"15","hashOfConfig":"13"},{"size":239,"mtime":1650334335569,"results":"16","hashOfConfig":"13"},{"size":546,"mtime":1650154868273,"results":"17","hashOfConfig":"18"},{"size":544,"mtime":1650336963292,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1650149443622,"results":"20","hashOfConfig":"18"},{"size":239,"mtime":1650334335569,"results":"21","hashOfConfig":"18"},{"size":403,"mtime":1650470562960,"results":"22","hashOfConfig":"13"},{"size":2808,"mtime":1650483632485,"results":"23","hashOfConfig":"13"},{"size":3305,"mtime":1650481673554,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8cuxqg",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"187e3ek",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/index.js",[],[],"/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/App.js",["61"],[],"import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport axios from 'axios'\nimport UserService from './services/UserService';\nimport FoodList from './components/FoodList';\nimport FoodEdit from './components/FoodEdit';\n\nclass App extends Component {\n  \n  state = {\n    user: \"\",\n    food: []\n  }\n\n  componentDidMount() {\n    UserService.getUser().then((res) => {this.setState({user: res.data})})\n  }\n\n  render() {\n    console.log(this.state.food)\n    return (\n      <div>\n      <h2>\n        What's up {this.state.user}. Welcome.\n      </h2>\n\n      <Router>\n      <Switch>\n        <Route path='/' exact={true} component={FoodList}/>\n        <Route path='/myfood' exact={true} component={FoodList}/>\n        <Route path='/myfood/:id' component={FoodEdit}/>\n      </Switch>\n      </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/reportWebVitals.js",[],[],"/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/services/UserService.js",[],[],"/Users/michaelmatta/Desktop/PantryPal/frontend/src/index.js",[],[],"/Users/michaelmatta/Desktop/PantryPal/frontend/src/App.js",["62","63","64","65"],[],"/Users/michaelmatta/Desktop/PantryPal/frontend/src/reportWebVitals.js",[],[],"/Users/michaelmatta/Desktop/PantryPal/frontend/src/services/UserService.js",[],[],"/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/services/FoodService.js",[],[],"/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/components/FoodList.js",["66"],[],"import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport FoodService from '../services/FoodService';\n\nclass FoodList extends Component {\n\n    constructor(props) {\n        console.log(props);\n        super(props);\n        this.state = {food: []};\n        //this.remove = this.remove.bind(this);\n        this.addEmployee = this.addEmployee.bind(this);\n    }\n\n    componentDidMount() { \n        FoodService.getFood().then((res) => {this.setState({food: res.data})})\n    }\n\n    // async remove(id) {\n    //     await fetch(`/clients/${id}`, {\n    //         method: 'DELETE',\n    //         headers: {\n    //             'Accept': 'application/json',\n    //             'Content-Type': 'application/json'\n    //         }\n    //     }).then(() => {\n    //         let updatedClients = [...this.state.clients].filter(i => i.id !== id);\n    //         this.setState({clients: updatedClients});\n    //     });\n    // }\n\n    remove(id) {\n        FoodService.deleteFood(id);\n        this.setState({food: this.state.food.filter(food => food.id !== id)});\n    }\n\n    addEmployee(){\n        this.props.history.push('/myfood/_add');\n    }\n\n    render() {\n\n        const foods = this.state.food;\n        const foodList = foods.map(food => {\n            return <tr>\n                <td style={{whiteSpace: 'nowrap'}}>{food.name}</td>\n                <td>{food.buy}</td>\n                <td>{food.exp}</td>\n                <td>{food.cal}</td>\n                <td>\n                    <ButtonGroup>\n                        <Button size=\"sm\" color=\"primary\">Edit</Button>\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(food.id)}>Delete</Button>\n                    </ButtonGroup>\n                </td>\n            </tr>\n        });\n\n        return (\n            <div>\n                <Container fluid>\n                    <div className=\"float-right\">\n                        <Button color=\"success\" onClick={this.addEmployee}>Add Food</Button>\n                    </div>\n                    <h3>Food</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"18%\">Name</th>\n                            <th width=\"18%\">Buy Date</th>\n                            <th width=\"18%\">Expiration Date</th>\n                            <th width=\"18%\">Calories</th>\n                            <th width=\"28%\">Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        {foodList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default FoodList;","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/components/FoodEdit.js",["67","68"],[],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport FoodService from '../services/FoodService';\n\nclass FoodEdit extends Component {\n\n    emptyItem = {\n        name: '',\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // componentDidMount() {\n    //     if(this.state.id === '_add'){\n    //         return\n    //     }else{\n    //         FoodService.getEmployeeById(this.state.id).then( (res) =>{\n    //             let employee = res.data;\n    //             this.setState({firstName: employee.firstName,\n    //                 lastName: employee.lastName,\n    //                 emailId : employee.emailId\n    //             });\n    //         });\n    //     }     \n    // }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    };\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const {item} = this.state;\n    \n        // await fetch('/clients' + (item.id ? '/' + item.id : ''), {\n        //     method: (item.id) ? 'PUT' : 'POST',\n        //     headers: {\n        //         'Accept': 'application/json',\n        //         'Content-Type': 'application/json'\n        //     },\n        //     body: JSON.stringify(item),\n        // });\n        // this.props.history.push('/clients');\n        console.log(item);\n        FoodService.createFood(item)\n        this.props.history.push(\"/\")\n    }\n\n    render() {\n        const {item} = this.state;\n        const title = <h2>{item.id ? 'Edit Client' : 'Add Client'}</h2>;\n\n        return <div>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"name\">Name</Label>\n                        <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''}\n                               onChange={this.handleChange} autoComplete=\"name\"/>\n                        <Input type=\"date\" name=\"buyDate\" id=\"buyDate\"\n                               onChange={this.handleChange}/>\n                        <Input type=\"date\" name=\"expirationDate\" id=\"expirationDate\"\n                               onChange={this.handleChange}/>\n                    </FormGroup>\n                    {/* <FormGroup>\n                        <Label for=\"email\">Email</Label>\n                        <Input type=\"text\" name=\"email\" id=\"email\" value={item.email || ''}\n                               onChange={this.handleChange} autoComplete=\"email\"/>\n                    </FormGroup> */}\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>\n                        <Button color=\"secondary\" tag={Link} to=\"/\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default FoodEdit;",{"ruleId":"69","severity":1,"message":"70","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":13},{"ruleId":"69","severity":1,"message":"73","line":3,"column":27,"nodeType":"71","messageId":"72","endLine":3,"endColumn":33},{"ruleId":"69","severity":1,"message":"74","line":3,"column":35,"nodeType":"71","messageId":"72","endLine":3,"endColumn":40},{"ruleId":"69","severity":1,"message":"75","line":3,"column":42,"nodeType":"71","messageId":"72","endLine":3,"endColumn":48},{"ruleId":"69","severity":1,"message":"70","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":13},{"ruleId":"69","severity":1,"message":"76","line":3,"column":10,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"69","severity":1,"message":"70","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},{"ruleId":"69","severity":1,"message":"77","line":3,"column":16,"nodeType":"71","messageId":"72","endLine":3,"endColumn":26},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'withRouter' is defined but never used."]