[{"/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/index.js":"1","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/App.js":"2","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/reportWebVitals.js":"3","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/services/UserService.js":"4","/Users/michaelmatta/Desktop/PantryPal/frontend/src/index.js":"5","/Users/michaelmatta/Desktop/PantryPal/frontend/src/App.js":"6","/Users/michaelmatta/Desktop/PantryPal/frontend/src/reportWebVitals.js":"7","/Users/michaelmatta/Desktop/PantryPal/frontend/src/services/UserService.js":"8","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/services/FoodService.js":"9","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/components/FoodList.js":"10","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/components/FoodEdit.js":"11"},{"size":546,"mtime":1650154868273,"results":"12","hashOfConfig":"13"},{"size":885,"mtime":1650593238000,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1650149443622,"results":"15","hashOfConfig":"13"},{"size":256,"mtime":1650596472978,"results":"16","hashOfConfig":"13"},{"size":546,"mtime":1650154868273,"results":"17","hashOfConfig":"18"},{"size":544,"mtime":1650336963292,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1650149443622,"results":"20","hashOfConfig":"18"},{"size":239,"mtime":1650334335569,"results":"21","hashOfConfig":"18"},{"size":378,"mtime":1650596474782,"results":"22","hashOfConfig":"13"},{"size":5485,"mtime":1650497069159,"results":"23","hashOfConfig":"13"},{"size":3600,"mtime":1650495456970,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8cuxqg",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"187e3ek",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/index.js",[],[],"/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/App.js",["60"],[],"/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/reportWebVitals.js",[],[],"/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/services/UserService.js",[],[],"/Users/michaelmatta/Desktop/PantryPal/frontend/src/index.js",[],[],"/Users/michaelmatta/Desktop/PantryPal/frontend/src/App.js",["61","62","63","64"],[],"/Users/michaelmatta/Desktop/PantryPal/frontend/src/reportWebVitals.js",[],[],"/Users/michaelmatta/Desktop/PantryPal/frontend/src/services/UserService.js",[],[],"/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/services/FoodService.js",[],[],"/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/components/FoodList.js",["65","66","67","68","69","70"],[],"import React, { Component } from 'react';\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport FoodService from '../services/FoodService';\n\nclass FoodList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {food: []};\n        //this.remove = this.remove.bind(this);\n        this.addEmployee = this.addEmployee.bind(this);\n    }\n\n    componentDidMount() { \n        FoodService.getFood().then((res) => {this.setState({food: res.data}, () => {console.log(this.state.food)})});\n    }\n\n    // async remove(id) {\n    //     await fetch(`/clients/${id}`, {\n    //         method: 'DELETE',\n    //         headers: {\n    //             'Accept': 'application/json',\n    //             'Content-Type': 'application/json'\n    //         }\n    //     }).then(() => {\n    //         let updatedClients = [...this.state.clients].filter(i => i.id !== id);\n    //         this.setState({clients: updatedClients});\n    //     });\n    // }\n\n    remove(id, category) {\n        var i = 0;\n        switch(category) {\n            case \"Pantry\":\n                i=0;\n                break;\n            case \"Fridge\":\n                i=1;\n                break;\n            case \"Freezer\":\n                i=2;\n                break;\n        }\n        FoodService.deleteFood(id);\n        console.log(\"Deleting food \" + category);\n      //  this.setState({food: this.state.food.filter(food => food.id !== id)});\n        this.setState(() => {\n\n            var newState = []\n            for (let j = 0; j < 3; j++) {\n                if(i == j) {\n                    newState.push(this.state.food[j].filter(f => f.id !== id));\n                } else {\n                    newState.push(this.state.food[j]);\n                }\n            }\n            this.setState({food: newState});\n        });\n    }\n\n    addEmployee(){\n        this.props.history.push('/myfood/_add');\n    }\n\n    render() {\n        \n        const foods = this.state.food;\n        console.log(foods)\n        var pantryList = null;\n        var fridgeList = null;\n        var freezerList = null;\n        if(!(foods[0] === undefined || foods[0].length == 0)) {\n            pantryList = foods[0].map(food => {\n                    return <tr>\n                        <td style={{whiteSpace: 'nowrap'}}>{food.name}</td>\n                        <td>{food.buy}</td>\n                        <td>{food.exp}</td>\n                        <td>{food.cal}</td>\n                        <td>\n                            <ButtonGroup>\n                                <Button size=\"sm\" color=\"primary\">Edit</Button>\n                                <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(food.id, food.category)}>Delete</Button>\n                            </ButtonGroup>\n                        </td>\n                    </tr>\n            });\n        }\n        if(!(foods[1] === undefined || foods[1].length == 0)) {\n            fridgeList = foods[1].map(food => {\n                return <tr>\n                    <td style={{whiteSpace: 'nowrap'}}>{food.name}</td>\n                    <td>{food.buy}</td>\n                    <td>{food.exp}</td>\n                    <td>{food.cal}</td>\n                    <td>\n                        <ButtonGroup>\n                            <Button size=\"sm\" color=\"primary\">Edit</Button>\n                            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(food.id, food.category)}>Delete</Button>\n                        </ButtonGroup>\n                    </td>\n                </tr>\n            });\n        }  \n        if(!(foods[2] === undefined || foods[2].length == 0)) {\n            freezerList = foods[2].map(food => {\n                return <tr>\n                    <td style={{whiteSpace: 'nowrap'}}>{food.name}</td>\n                    <td>{food.buy}</td>\n                    <td>{food.exp}</td>\n                    <td>{food.cal}</td>\n                    <td>\n                        <ButtonGroup>\n                            <Button size=\"sm\" color=\"primary\">Edit</Button>\n                            <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(food.id, food.category)}>Delete</Button>\n                        </ButtonGroup>\n                    </td>\n                </tr>\n            });\n        }\n\n        return (\n            <div>\n                <Container fluid>\n                    <div className=\"float-right\">\n                        <Button color=\"success\" onClick={this.addEmployee}>Add Food</Button>\n                    </div>\n                    <h3>Your Food</h3>\n                    <Table className=\"mt-4\">\n                        <thead>\n                        <tr>\n                            <th width=\"18%\">Name</th>\n                            <th width=\"18%\">Buy Date</th>\n                            <th width=\"18%\">Expiration Date</th>\n                            <th width=\"18%\">Calories</th>\n                            <th width=\"28%\">Actions</th>\n                        </tr>\n                        </thead>\n                        <tbody>\n                        <h4>Pantry</h4>\n                        {pantryList}\n                        <h4>Fridge</h4>\n                        {fridgeList}\n                        <h4>Freezer</h4>\n                        {freezerList}\n                        </tbody>\n                    </Table>\n                </Container>\n            </div>\n        );\n    }\n}\n\nexport default FoodList;","/Users/michaelmatta/Documents/workspace-spring-tool-suite-4-4.13.1.RELEASE/PantryPal/frontend/src/components/FoodEdit.js",["71","72"],[],"import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport FoodService from '../services/FoodService';\n\nclass FoodEdit extends Component {\n\n    emptyItem = {\n        name: '',\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: this.emptyItem\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // componentDidMount() {\n    //     if(this.state.id === '_add'){\n    //         return\n    //     }else{\n    //         FoodService.getEmployeeById(this.state.id).then( (res) =>{\n    //             let employee = res.data;\n    //             this.setState({firstName: employee.firstName,\n    //                 lastName: employee.lastName,\n    //                 emailId : employee.emailId\n    //             });\n    //         });\n    //     }     \n    // }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        let item = {...this.state.item};\n        item[name] = value;\n        this.setState({item});\n    };\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const {item} = this.state;\n    \n        // await fetch('/clients' + (item.id ? '/' + item.id : ''), {\n        //     method: (item.id) ? 'PUT' : 'POST',\n        //     headers: {\n        //         'Accept': 'application/json',\n        //         'Content-Type': 'application/json'\n        //     },\n        //     body: JSON.stringify(item),\n        // });\n        // this.props.history.push('/clients');\n        console.log(item);\n        FoodService.createFood(item)\n        this.props.history.push(\"/\")\n    }\n\n    render() {\n        const {item} = this.state;\n        const title = <h2>{item.id ? 'Edit Client' : 'Add Client'}</h2>;\n\n        return <div>\n            <Container>\n                {title}\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label for=\"name\">Name</Label>\n                        <Input type=\"text\" name=\"name\" id=\"name\" value={item.name || ''}\n                               onChange={this.handleChange} autoComplete=\"name\"/>\n                        <Input type=\"date\" name=\"buyDate\" id=\"buyDate\"\n                               onChange={this.handleChange}/>\n                        <Input type=\"date\" name=\"expirationDate\" id=\"expirationDate\"\n                               onChange={this.handleChange}/>\n                        <Input type=\"select\" name=\"category\" id=\"category\" onChange={this.handleChange}>\n                            <option>Pantry</option>\n                            <option>Fridge</option>\n                            <option>Freezer</option>\n                        </Input>\n                    </FormGroup>\n                    {/* <FormGroup>\n                        <Label for=\"email\">Email</Label>\n                        <Input type=\"text\" name=\"email\" id=\"email\" value={item.email || ''}\n                               onChange={this.handleChange} autoComplete=\"email\"/>\n                    </FormGroup> */}\n                    <FormGroup>\n                        <Button color=\"primary\" type=\"submit\">Save</Button>\n                        <Button color=\"secondary\" tag={Link} to=\"/\">Cancel</Button>\n                    </FormGroup>\n                </Form>\n            </Container>\n        </div>\n    }\n}\n\nexport default FoodEdit;",{"ruleId":"73","severity":1,"message":"74","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":13},{"ruleId":"73","severity":1,"message":"77","line":3,"column":27,"nodeType":"75","messageId":"76","endLine":3,"endColumn":33},{"ruleId":"73","severity":1,"message":"78","line":3,"column":35,"nodeType":"75","messageId":"76","endLine":3,"endColumn":40},{"ruleId":"73","severity":1,"message":"79","line":3,"column":42,"nodeType":"75","messageId":"76","endLine":3,"endColumn":48},{"ruleId":"73","severity":1,"message":"74","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":13},{"ruleId":"73","severity":1,"message":"80","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":34,"column":9,"nodeType":"83","messageId":"84","endLine":44,"endColumn":10},{"ruleId":"85","severity":1,"message":"86","line":52,"column":22,"nodeType":"87","messageId":"88","endLine":52,"endColumn":24},{"ruleId":"85","severity":1,"message":"86","line":73,"column":56,"nodeType":"87","messageId":"88","endLine":73,"endColumn":58},{"ruleId":"85","severity":1,"message":"86","line":89,"column":56,"nodeType":"87","messageId":"88","endLine":89,"endColumn":58},{"ruleId":"85","severity":1,"message":"86","line":105,"column":56,"nodeType":"87","messageId":"88","endLine":105,"endColumn":58},{"ruleId":"73","severity":1,"message":"74","line":1,"column":8,"nodeType":"75","messageId":"76","endLine":1,"endColumn":13},{"ruleId":"73","severity":1,"message":"89","line":3,"column":16,"nodeType":"75","messageId":"76","endLine":3,"endColumn":26},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'withRouter' is defined but never used."]